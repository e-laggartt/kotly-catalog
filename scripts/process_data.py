import pandas as pd
import json
from datetime import datetime

def main():
    try:
        print("–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö...")

        # === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
        price_df = pd.read_excel('–ü—Ä–∞–π—Å.xlsx', sheet_name='–ü—Ä–∞–π—Å-–ª–∏—Å—Ç')
        stock_df = pd.read_excel('–Ω–∞–ª–∏—á–∏–µ –∫–æ—Ç–ª—ã.xlsx', sheet_name='–õ–∏—Å—Ç_1')

        # === –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ ===
        print("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–∞–π—Å-–ª–∏—Å—Ç...")
        price_df = price_df[['–ê—Ä—Ç–∏–∫—É–ª', '–¢–æ–≤–∞—Ä', '–†–æ–∑–Ω–∏—á–Ω–∞—è']].copy()
        price_df.columns = ['–ê—Ä—Ç–∏–∫—É–ª', '–ú–æ–¥–µ–ª—å', '–¶–µ–Ω–∞']

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        if price_df.iloc[0].isnull().sum() < 2:
            price_df = price_df.iloc[1:].reset_index(drop=True)

        price_df = price_df.dropna(subset=['–ê—Ä—Ç–∏–∫—É–ª'])
        price_df['–ê—Ä—Ç–∏–∫—É–ª'] = (price_df['–ê—Ä—Ç–∏–∫—É–ª']
                               .astype(str)
                               .str.replace(r'\.0$', '', regex=True)
                               .str.strip())
        price_df['–¶–µ–Ω–∞'] = pd.to_numeric(price_df['–¶–µ–Ω–∞'], errors='coerce').fillna(0)

        price_df = price_df.drop_duplicates('–ê—Ä—Ç–∏–∫—É–ª')

        # === –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ ===
        print("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏...")
        # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –∞—Ä—Ç–∏–∫—É–ª–∞
        stock_df = stock_df.dropna(subset=[stock_df.columns[0]]).copy()

        # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ —Å —á–∏—Å–ª–æ–≤—ã–º –∞—Ä—Ç–∏–∫—É–ª–æ–º (6+ —Ü–∏—Ñ—Ä)
        mask = stock_df.iloc[:, 0].astype(str).str.match(r'^\d{6,}$', na=False)
        stock_df = stock_df[mask].copy()

        stock_df['–ê—Ä—Ç–∏–∫—É–ª'] = (stock_df.iloc[:, 0]
                               .astype(str)
                               .str.replace(r'\.0$', '', regex=True)
                               .str.strip())
        stock_df['–í_–Ω–∞–ª–∏—á–∏–∏'] = pd.to_numeric(stock_df.iloc[:, 7], errors='coerce')  # –ö–æ–ª–æ–Ω–∫–∞ H
        stock_df['–í_–Ω–∞–ª–∏—á–∏–∏'] = stock_df['–í_–Ω–∞–ª–∏—á–∏–∏'].fillna(0).apply(lambda x: max(0, x)).astype(int)

        stock_df = stock_df[['–ê—Ä—Ç–∏–∫—É–ª', '–í_–Ω–∞–ª–∏—á–∏–∏']]

        # === –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ ===
        print("–û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ...")
        merged_df = pd.merge(price_df, stock_df, on='–ê—Ä—Ç–∏–∫—É–ª', how='left')
        merged_df['–í_–Ω–∞–ª–∏—á–∏–∏'] = merged_df['–í_–Ω–∞–ª–∏—á–∏–∏'].fillna(0).astype(int)

        merged_df['–°—Ç–∞—Ç—É—Å'] = merged_df['–í_–Ω–∞–ª–∏—á–∏–∏'].apply(
            lambda x: '–í –Ω–∞–ª–∏—á–∏–∏' if x > 0 else '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'
        )

        # === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ JSON ===
        print("–°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON...")
        data_for_json = []
        for _, row in merged_df.iterrows():
            data_for_json.append({
                '–ê—Ä—Ç–∏–∫—É–ª': row['–ê—Ä—Ç–∏–∫—É–ª'],
                '–ú–æ–¥–µ–ª—å': row['–ú–æ–¥–µ–ª—å'],
                '–¶–µ–Ω–∞': float(row['–¶–µ–Ω–∞']),
                '–í_–Ω–∞–ª–∏—á–∏–∏': int(row['–í_–Ω–∞–ª–∏—á–∏–∏']),
                '–°—Ç–∞—Ç—É—Å': row['–°—Ç–∞—Ç—É—Å']
            })

        with open('data.json', 'w', encoding='utf-8') as f:
            json.dump(data_for_json, f, ensure_ascii=False, indent=2)

        print("‚úÖ data.json —Å–æ–∑–¥–∞–Ω")

        # === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ Excel ===
        current_date = datetime.now().strftime('%Y-%m-%d')
        output_filename = f'–°–≤–æ–¥–Ω–∞—è_—Ç–∞–±–ª–∏—Ü–∞_–∫–æ—Ç–ª—ã_{current_date}.xlsx'

        with pd.ExcelWriter(output_filename, engine='openpyxl') as writer:
            merged_df.to_excel(writer, sheet_name='–°–≤–æ–¥–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞', index=False)

            summary_df = pd.DataFrame({
                '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': ['–í—Å–µ–≥–æ', '–í –Ω–∞–ª–∏—á–∏–∏', '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'],
                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ': [
                    len(merged_df),
                    len(merged_df[merged_df['–í_–Ω–∞–ª–∏—á–∏–∏'] > 0]),
                    len(merged_df[merged_df['–í_–Ω–∞–ª–∏—á–∏–∏'] == 0])
                ]
            })
            summary_df.to_excel(writer, sheet_name='–ò—Ç–æ–≥–∏', index=False)

        print(f"‚úÖ {output_filename} —Å–æ–∑–¥–∞–Ω")
        print(f"üìä –í –Ω–∞–ª–∏—á–∏–∏: {len(merged_df[merged_df['–í_–Ω–∞–ª–∏—á–∏–∏'] > 0])} –ø–æ–∑–∏—Ü–∏–π")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        raise

if __name__ == "__main__":
    main()
